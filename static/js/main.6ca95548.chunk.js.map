{"version":3,"sources":["components/Project.js","components/Imex.js","database/data.js","components/BeginerInfo.js","components/AddNewFish.js","components/Card.js","components/FishPackage.js","components/StartLearn.js","App.js","serviceWorker.js","index.js"],"names":["Project","className","Imex","exampleBase","packageId","packageName","creationDate","content","id","word","translation","remember","BeginerInfo","setShowBeginerInfo","onClick","localStorage","setItem","AddNewFish","fishes","setFishes","data","setData","idOfPack","useState","addFormFlag","setAddFormFlag","newWord","setNewWord","newTranslation","setNewTranslation","onSubmit","e","preventDefault","newFish","uniqid","newFishArr","concat","newData","map","pack","type","onChange","target","value","placeholder","Card","fish","setShowCard","changeIndex","setIndexOfFish","setRemember","useEffect","setActualFish","setText","setShowRemember","actualFish","text","showRemember","FishPackage","name","setShowDetails","editWord","setEditWord","editTranslation","setEditTranslation","editWordId","setEditWordId","showEditFish","setShowEditFish","showCard","indexOfFish","showRemove","setShowRemove","checkIndex","number","length","href","filter","flag","console","log","newContent","index","key","editItem","itemToRemove","pair","removeItem","fishAfterEdit","cols","rows","StartLearn","baseLocal","JSON","parse","getItem","nameOfPackage","setNameOfPackage","idOfEdit","setIdOfEdit","showDetails","showAddPackage","setShowAddPackage","newPackageName","setNewPackageName","showBeginerInfo","stringify","showFish","newPack","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","formatDate","window","jQuery","$","require","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ca95548.chunk.js","sourcesContent":["import React from 'react';\nconst Project = () => {\n    return (\n        <div className=\"about\">\n            <h1 className='about__heading'>Informacje o projekcie</h1>\n            <p className=\"about__par about__par--center\">Projekt zrealizowałem w ramach nauki React.</p>\n            <p className=\"about__par about__par--center\">Każdy może z Fiszkina korzystać do woli i całkowicie za darmo.</p>\n            <h2 className=\"about__heading-small\">Skąd pomysł na Fiszkina?</h2>\n            <p className=\"about__par\">Sam wielokrotnie w trakcie nauki języków obcych ( jak i programowania ) korzystałem z fiszek. Zaczynałem od najzwyklejszych karteczek. Kupowało się twardy blok, z którego wycinało się kwadraty. Na nich to robiłem pierwsze fiszki. Na studiach dzięki tej metodzie miałem 5 z angielskiego!</p>\n            <p className=\"about__par\">Ostatnio całkowicie przypadkowo natrafiłem na aplikacje służące do nauki z fiszek, co mnie bardzo ucieszyło. Niestety. Jeden program bardzo mocno ograniczał w wersji bezpłatnej. Drugi po prostu zasypywał reklamami co niezwykle irytowało.</p>\n            <p className=\"about__par\">Postanowiłem, że wykonam ten projekt jako element do mojego portfolio programisty przy okazji dając Wam darmowe narzędzie do nauki.</p>\n            <p className=\"about__par about__par--greet\">Pozdrawiam Was wszystkich</p>\n            <p className=\"about__par about__par--author\">Aleksander Kruk</p>\n        </div>\n    );\n}\nexport default Project;\n","import React from 'react';\nconst Imex = () => {\n    return (\n        <div className=\"import\">\n            <h1 className='import__heading'>Funkcja importu i exportu</h1>\n            <p className=\"import__par\">Jest to następny etap projektu, zrealizowany będzie najpóźniej w marcu 2021 roku.</p>\n            <p className=\"import__par\">Cała idea polega na tym, aby w ramach zmiany urządzenia, lub chęci korzystania z innej przeglądarki była możliwość przeniesienia swoich fiszek.</p>\n            <p className=\"import__par\">W dalszym horyzoncie, jeżeli projekt w jakikolwiek sposób by się rozwijał - faktycznie znalazłby grono zadowolonych użytkowników - wprowadzone będzie po prostu zakładanie kont i problem zniknie.</p>\n            <p className=\"alert alert-success\">Przypominam, że Fiszkin korzysta z pamięci w Twojej przeglądarce, dlatego musisz korzystać ciągle z tej samej</p>\n\n        </div>\n    );\n}\nexport default Imex;","const exampleBase = [{\n    packageId: 'fish-pack-cjsghdj5',\n    packageName: 'Animals',\n    creationDate: '2021-01-09',\n    content: [{\n            id: 'fish-bjssn5qa',\n            word: 'Cat',\n            translation: 'Kot',\n            remember: false\n        },\n        {\n            id: 'fish-bjssqp71',\n            word: 'Dog',\n            translation: 'Pies',\n            remember: false\n        },\n        {\n            id: 'fish-bjssrjx4',\n            word: 'Parrot',\n            translation: 'Papuga',\n            remember: false\n        },\n        {\n            id: 'fish-bjsssg9a',\n            word: 'Hyena',\n            translation: 'Hiena',\n            remember: false\n        },\n        {\n            id: 'fish-bjsst2qn',\n            word: 'Lion',\n            translation: 'Lew',\n            remember: false\n        },\n        {\n            id: 'fish-bjsstl25',\n            word: 'Mouse',\n            translation: 'Mysz',\n            remember: false\n        },\n\n    ]\n}]\n\nexport default exampleBase;","import React from 'react';\nimport { BiInfoCircle } from 'react-icons/bi';\nconst BeginerInfo = ({ setShowBeginerInfo }) => {\n\n    const hideBeginerMsg = () => {\n        setShowBeginerInfo(false);\n        localStorage.setItem('fiszkin-first-login', 'not-new');\n    }\n\n    return (\n        <div className=\"beginer-info\">\n            <h2 className=\"beginer-info__heading\">Witaj użytkowniku!</h2>\n            <p>Ta wiadomość wyświetli Ci się tylko raz.</p>\n            <p>Fiszkin korzysta z pamięci w Twojej przeglądarce, co oznacza, że musisz używać zawsze z tej samej</p>\n            <p>Jeśli zazwyczaj uczysz się z telefonem i lubisz przeglądarkę Firefox, Chrome, Safari albo jakąkolwiek inną - korzystaj tej samej.</p>\n            <button className=\"btn btn-info\" onClick={hideBeginerMsg}>Zrozumiałem</button>\n        </div>\n    );\n}\n\nexport default BeginerInfo;","import React, { useState } from 'react';\nimport uniqid from 'uniqid';\nimport { VscChromeClose } from 'react-icons/vsc';\nconst AddNewFish = ({ fishes, setFishes, data, setData, idOfPack }) => {\n    const [addFormFlag, setAddFormFlag] = useState(false);\n    const [newWord, setNewWord] = useState('');\n    const [newTranslation, setNewTranslation] = useState('');\n\n    const showAddForm = () => {\n        setAddFormFlag(true);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const newFish = [{\n            id: uniqid('fish-'),\n            word: newWord,\n            translation: newTranslation,\n            remember: false\n        }];\n        const newFishArr = fishes.concat(newFish);\n\n        const newData = data.map(pack => {\n            const { packageId, packageName, creationDate } = pack;\n            if (packageId === idOfPack) {\n                return {\n                    packageId,\n                    packageName,\n                    creationDate,\n                    content: newFishArr\n                }\n            } else {\n                return pack;\n            };\n        });\n        setFishes(newFishArr);\n        setData(newData);\n        setAddFormFlag(false);\n        setNewWord('');\n        setNewTranslation('');\n\n    };\n\n    const handleWord = (e) => {\n        setNewWord(e.target.value);\n    };\n    const handleTranslation = (e) => {\n        setNewTranslation(e.target.value);\n    };\n    const closeAddNewFish = () => {\n        setAddFormFlag(false);\n    };\n\n    return (\n        <div className=\"addNewFish\">\n            <button className=\"btn btn-success\" onClick={showAddForm}>Nowa fiszka</button>\n            {addFormFlag && <form onSubmit={handleSubmit} className='add-new-fish'>\n                <VscChromeClose className='add-new-fish__close' onClick={closeAddNewFish} />\n                <input type=\"text\" className=\"add-new-fish__input-word\" onChange={handleWord} placeholder='nowe słowo' value={newWord} />\n                <input type=\"text\" className=\"add-new-fish__input-translation\" onChange={handleTranslation} placeholder='nowe objaśnienie' value={newTranslation} />\n                <button type='submit' className='btn btn-success'>Dodaj</button>\n            </form>}\n        </div>\n\n    );\n}\n\nexport default AddNewFish;","import React, { useState, useRef } from 'react';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport { TiArrowLeftOutline, TiArrowRightOutline } from 'react-icons/ti';\nimport { useEffect } from 'react';\nconst Card = ({ fish, setShowCard, changeIndex, setIndexOfFish, setRemember }) => {\n\n    useEffect(() => {\n        setActualFish(fish);\n        setText(fish.word);\n        setShowRemember(false);\n    }, [fish]);\n\n    const [actualFish, setActualFish] = useState(fish);\n    const { id, word, translation, remember } = actualFish;\n    const [text, setText] = useState(word);\n    const [showRemember, setShowRemember] = useState(false);\n    const handleCheck = () => {\n        setText(translation);\n        setShowRemember(true);\n    };\n    return (\n        <div className=\"card-blur\">\n            <VscChromeClose className='card-blur__close' onClick={() => {\n                setShowCard(false);\n                setIndexOfFish(0);\n            }} />\n            <div className=\"card\">\n                <div className='card__back' >\n                    <TiArrowLeftOutline onClick={() => changeIndex('minus')} />\n                </div>\n                <div className=\"card__content\">\n                    <p className={remember ? 'card__remember' : ' card__not-remamber'}>\n                        {remember ? 'Zapamiętane' : 'Nie pamiętasz'}\n                    </p>\n                    <h1 className=\"card-word\">{text}</h1>\n                    <button className=\"btn btn-info\" onClick={handleCheck}>Sprawdź!</button>\n                    {showRemember && <div className=\"card__remember-or-not\">\n                        <button className='btn btn-success' onClick={() => {\n                            setRemember(id, 'remember');\n                            changeIndex('plus');\n                        }}>Pamiętam</button>\n                        <button className='btn btn-warning' onClick={() => {\n                            setRemember(id, 'not-remember');\n                            changeIndex('plus');\n                        }}>Nie pamiętam</button>\n                    </div>}\n                </div>\n                <div className='card__next' >\n                    <TiArrowRightOutline onClick={() => changeIndex('plus')} />\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nexport default Card;","import React, { useState } from 'react';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport { AiFillEdit } from 'react-icons/ai';\nimport { RiDeleteBinFill } from 'react-icons/ri';\nimport { GiCheckMark } from 'react-icons/gi';\nimport AddNewFish from './AddNewFish';\nimport Card from './Card';\n\nconst FishPackage = ({ content, name, idOfPack, setShowDetails, data, setData }) => {\n    const [fishes, setFishes] = useState(content);\n    const [editWord, setEditWord] = useState('');\n    const [editTranslation, setEditTranslation] = useState('');\n    const [editWordId, setEditWordId] = useState('');\n    const [showEditFish, setShowEditFish] = useState(false);\n    const [showCard, setShowCard] = useState(false);\n    const [indexOfFish, setIndexOfFish] = useState(0);\n    const [showRemove, setShowRemove] = useState(false);\n\n    const checkIndex = (number) => {\n        if (number > fishes.length - 1) return 0;\n        if (number < 0) return fishes.length - 1;\n        return number\n\n    };\n    const changeIndex = (flag) => {\n        if (flag === 'plus') setIndexOfFish(checkIndex(indexOfFish + 1));\n        if (flag === 'minus') setIndexOfFish(checkIndex(indexOfFish - 1));\n        console.log(indexOfFish)\n    };\n    const removeItem = (index) => {\n        const newData = data.map((pack) => {\n            if (pack.packageId === idOfPack) {\n                const { packageName, creationDate, content } = pack;\n                const itemToRemove = content[index];\n                const newContent = content.filter((pair) => pair !== itemToRemove);\n                setFishes(newContent);\n                return {\n                    packageId: idOfPack,\n                    packageName,\n                    creationDate,\n                    content: newContent\n                }\n\n            } else {\n\n                return pack;\n            }\n        });\n        setData(newData);\n    };\n\n    const setRemember = (id, flag) => {\n        const newData = data.map((pack) => {\n            if (pack.packageId === idOfPack) {\n                const { packageName, creationDate, content } = pack;\n                const newContent = content.map((fish) => {\n                    if (fish.id === id) {\n                        const { id, word, translation } = fish;\n                        if (flag === 'remember') {\n                            return {\n                                id: id,\n                                word: word,\n                                translation: translation,\n                                remember: true\n                            }\n                        } else {\n                            return {\n                                id: id,\n                                word: word,\n                                translation: translation,\n                                remember: false\n                            }\n                        };\n\n                    } else {\n                        return fish\n                    }\n                });\n                setFishes(newContent);\n                return {\n                    packageId: idOfPack,\n                    packageName,\n                    creationDate,\n                    content: newContent\n                }\n\n            } else {\n                return pack\n            }\n\n        });\n        setData(newData);\n    }\n\n    const editItem = (word, translation, id) => {\n        setEditWord(word);\n        setEditTranslation(translation);\n        setEditWordId(id);\n        setShowEditFish(true);\n\n    };\n\n    const handleSubmitEdit = (e) => {\n        e.preventDefault();\n        const fishAfterEdit = {\n            id: editWordId,\n            word: editWord,\n            translation: editTranslation,\n            remember: false\n        };\n        const newData = data.map((pack) => {\n            if (pack.packageId === idOfPack) {\n                const { packageName, creationDate, content } = pack;\n                const newContent = content.map((fish) => {\n                    if (fish.id === editWordId) {\n                        return fishAfterEdit;\n                    } else {\n                        return fish;\n                    };\n                });\n\n                setFishes(newContent);\n                return {\n                    packageId: idOfPack,\n                    packageName,\n                    creationDate,\n                    content: newContent\n                }\n\n            } else {\n\n                return pack;\n            }\n        });\n        setData(newData);\n        setShowEditFish(false);\n\n    }\n\n    const closeContainer = () => {\n        setShowDetails(false);\n    };\n    const closeEditFish = () => {\n        setShowEditFish(false);\n    };\n    const removePackage = () => {\n        const newData = data.filter(pack => pack.packageId !== idOfPack);\n        setData(newData);\n\n    };\n    return (\n        <div className=\"package-present\">\n            <button className='package-present__delete-package btn btn-danger' onClick={() => setShowRemove(true)}><RiDeleteBinFill /></button>\n            {showRemove && <div className=\"remove-package\">\n                <h4 className=\"remove-package__heading\">Napewno chcesz usunąć paczkę?</h4>\n                <div>\n                    <a href='/' className=\"btn btn-danger\" onClick={removePackage}>Tak</a>\n                    <button className=\"btn btn-success\" onClick={() => setShowRemove(false)}>Nie</button>\n                </div>\n            </div>}\n            <VscChromeClose className='package-present__close' onClick={closeContainer} />\n            <h1 className=\"package-present__title\">{name}</h1>\n            {fishes.length > 0 && <button className='btn btn-primary package-present__learn-btn' onClick={() => setShowCard(true)}>Sprawdź się!</button>}\n            {showCard && <Card fish={fishes[indexOfFish]} setShowCard={setShowCard} changeIndex={changeIndex} setIndexOfFish={setIndexOfFish} setRemember={setRemember} />}\n            <AddNewFish fishes={fishes} setFishes={setFishes} data={data} setData={setData} idOfPack={idOfPack} />\n            <div className=\"words-wrapper\">\n                {fishes.map((fish, index) => {\n                    const { word, translation, id, remember } = fish;\n                    return (\n                        <div className=\"word\" key={index}>\n                            <AiFillEdit className='word__edit' onClick={() => editItem(word, translation, id)} />\n                            <div className='word__details'>\n                                <p className='word__name'>{word}</p>\n                                <div className=\"word__underline\"></div>\n                                <p className='word__translation'>{translation}</p>\n                                <p className={remember ? 'word__remember word__remember--true' : 'word__remember'}>{remember ? 'pamiętasz' : 'nie pamiętasz'}</p>\n                            </div>\n                            <RiDeleteBinFill className='word__remove' onClick={() => removeItem(index)} />\n\n                        </div>\n                    )\n                })}\n            </div>\n            {showEditFish && <form className=\"edit-fish\" onSubmit={handleSubmitEdit}>\n                <VscChromeClose className='edit-fish__close' onClick={closeEditFish} />\n                <input className='edit-fish__input' type=\"text\" value={editWord} onChange={(e) => setEditWord(e.target.value)} />\n                <textarea className='edit-fish__textarea' name=\"translation\" id=\"\" cols=\"20\" rows=\"5\" value={editTranslation} onChange={(e) => setEditTranslation(e.target.value)}></textarea>\n                <button type='submit' className='edit-fish__buton'><GiCheckMark /></button>\n            </form>}\n        </div>\n    );\n}\n\nexport default FishPackage;","import React, { useState, useEffect } from 'react';\nimport exampleBase from '../database/data';\nimport BeginerInfo from './BeginerInfo';\nimport FishPackage from './FishPackage';\nimport { BiFolderOpen } from 'react-icons/bi';\nimport { VscChromeClose } from 'react-icons/vsc';\nimport uniqid from 'uniqid';\nconst StartLearn = () => {\n    const baseLocal = JSON.parse(localStorage.getItem(\"fiszkin\"));\n\n    const [data, setData] = useState(exampleBase);\n    const [fishes, setFishes] = useState([]);\n    const [nameOfPackage, setNameOfPackage] = useState('');\n    const [idOfEdit, setIdOfEdit] = useState('');\n    const [showDetails, setShowDetails] = useState(false);\n    const [showAddPackage, setShowAddPackage] = useState(false);\n    const [newPackageName, setNewPackageName] = useState('');\n    const [showBeginerInfo, setShowBeginerInfo] = useState(false);\n    useEffect(() => {\n        if (baseLocal === null) {\n            localStorage.setItem('fiszkin', JSON.stringify(exampleBase));\n        };\n        setData(baseLocal);\n\n    }, [])\n    useEffect(() => {\n        localStorage.setItem('fiszkin', JSON.stringify(data));\n    }, [data]);\n    useEffect(() => {\n        const firstLogin = localStorage.getItem('fiszkin-first-login');\n        if (!firstLogin) {\n            setShowBeginerInfo(true);\n        }\n    }, []);\n\n    const showFish = (index) => {\n        const { packageId, packageName, content } = data[index];\n        setFishes(content);\n        setNameOfPackage(packageName);\n        setIdOfEdit(packageId);\n        setShowDetails(true)\n    }\n\n    const showAddPackageFn = () => {\n        setShowAddPackage(true);\n    };\n    const createNewFolder = (e) => {\n        e.preventDefault();\n\n        function formatDate(date) {\n            var d = new Date(date),\n                month = '' + (d.getMonth() + 1),\n                day = '' + d.getDate(),\n                year = d.getFullYear();\n\n            if (month.length < 2)\n                month = '0' + month;\n            if (day.length < 2)\n                day = '0' + day;\n\n            return [year, month, day].join('-');\n        };\n\n        const newPack = [{\n            packageId: uniqid('fish-pack-'),\n            packageName: newPackageName,\n            creationDate: formatDate(new Date()),\n            content: []\n        }];\n\n        const newData = data.concat(newPack);\n        setData(newData);\n        setShowAddPackage(false);\n    };\n    return (\n\n        <div className=\"start-learn container\" >\n            {showBeginerInfo && <BeginerInfo setShowBeginerInfo={setShowBeginerInfo} />}\n            <h2 className='alert alert-info start-learn__amount'>Dostępna liczba paczek: {data.length}</h2>\n            <div className=\"packages row justify-content-center\">\n                {data.map((pack, index) => {\n                    const { packageName, creationDate, content } = pack;\n                    return (\n                        <div className=\"package col-10\" key={index} onClick={() => showFish(index)}>\n                            <BiFolderOpen className='package__icon' />\n                            <p className=\"package__length\">{content.length}</p>\n                            <p className=\"package__name\">{packageName}</p>\n\n                        </div>\n                    )\n                })}\n            </div>\n            {showDetails && <FishPackage content={fishes} setData={setData} data={data} name={nameOfPackage} idOfPack={idOfEdit} setShowDetails={setShowDetails} setFishes={setFishes} />}\n            <div className=\"new-package\">\n                <button className='btn btn-secondary' onClick={showAddPackageFn}>Utwórz paczkę</button>\n                {showAddPackage && <form onSubmit={createNewFolder} className='new-package-form'>\n                    <VscChromeClose className='new-package-form__close' onClick={() => setShowAddPackage(false)} />\n                    <input type=\"text\" className=\"new-package-form__input\" placeholder='nazwa paczki' value={newPackageName} onChange={(e) => setNewPackageName(e.target.value)} />\n                    <button type='submit' className='btn btn-info'>Dodaj</button>\n                </form>}\n            </div>\n        </div>\n    );\n}\nexport default StartLearn;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport Project from './components/Project';\nimport Imex from './components/Imex';\nimport StartLearn from './components/StartLearn';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport './css/styles.min.css';\nimport { FaRegSmileWink } from 'react-icons/fa';\nwindow.jQuery = window.$ = $;\nrequire('bootstrap');\n\n\n\nconst App = () => {\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"main-heading\">Fiszkin</h1>\n        <p className=\"main-desc\">Narzędzie do nauki poprzez stosowanie fiszek <FaRegSmileWink /></p>\n      </header>\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"main-nav navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/imex\">Import / Export</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/project\">O projekcie</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n            <Route path=\"/imex\">\n              <Imex />\n            </Route>\n            <Route path='/project'>\n              <Project />\n            </Route>\n            <Route path='/'>\n              <StartLearn />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}